#!/usr/bin/env python 2
import sys
opt = sys.argv[1]
args = sys.argv[2:]
morseRefD = {
	".-": "A",
	"-...": "B",
	"-.-.": "C",
	"-..": "D",
	".": "E",
	"..-.": "F",
	"--.": "G",
	"....": "H",
	"..": "I",
	".---": "J",
	"-.-": "K",
	".-..": "L",
	"--": "M",
	"-.": "N",
	"---": "O",
	".--.": "P",
	"--.-": "Q",
	".-.": "R",
	"...": "S",
	"-": "T",
	"..-": "U",
	"...-": "V",
	".--": "W",
	"-..-": "X",
	"-.--": "Y",
	"--..": "Z",
	".----": "1",
	"..---": "2",
	"...--": "3",
	"....-": "4",
	".....": "5",
	"-....": "6",
	"--...": "7",
	"---..": "8",
	"----.": "9",
	"-----": "0"
}
morseRefE = {}
for k in morseRefD:
	morseRefE[morseRefD[k]] = k
def parseLetter(cl):
	if cl == "":
		return " "
	return morseRefD[cl]
arg = " ".join(args).upper()
if opt == "-d" or opt == "d" or opt == "decode":
	tr = ""
	cl = ""
	for c in arg:
		if c == ".":
			cl += "."
		elif c == "-" or c == "_":
			cl += "-"
		elif c == " ":
			tr += parseLetter(cl)
			cl = ""
		else:
			print "FAIL"
			exit()
	if len(cl)>0:
		tr += parseLetter(cl)
	print tr.replace("  ", " ")
elif opt == "-e" or opt == "e" or opt == "encode":
	tr = ""
	for c in arg:
		if c in morseRefE:
			tr += morseRefE[c]+" "
		elif c == " ":
			tr += "   "
		else:
			print "FAIL ("+c+")"
			exit()
	print tr.rstrip()
